from django.shortcuts import render

# Create your views here.
from rest_framework.views import APIView
from rest_framework.generics import ListAPIView
from rest_framework.response import Response
from rest_framework.permissions import AllowAny
from .models import RoomBooking, ZoneBooking
from .serializers import RoomBookingSerializer, ZoneBookingSerializer
from datetime import timedelta, datetime
from django.core.mail import send_mail
from django.conf import settings
from zones.models import Room, Zone
from itertools import combinations
from django.core.validators import validate_email
from django.core.exceptions import ValidationError
from rest_framework.exceptions import ValidationError as DRFValidationError
import re

class ZoneBookingView(APIView):
    permission_classes = [AllowAny]

    def post(self, request):
        serializer = ZoneBookingSerializer(data=request.data)
        if serializer.is_valid():
            zone = serializer.validated_data['zone']
            booking_date = serializer.validated_data['booking_date']

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –¥–∞—Ç
            overlapping_bookings = ZoneBooking.objects.filter(
                zone=zone,
                booking_date=booking_date
            )

            if overlapping_bookings.exists():
                return Response(
                    {"error": "–≠—Ç–∞ –∑–æ–Ω–∞ —É–∂–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É."},
                    status=400
                )

            serializer.save()

            # –û—Ç–ø—Ä–∞–≤–∫–∞ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            send_mail(
                subject="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–æ–Ω—ã",
                message=(
                    f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {serializer.validated_data['name']}!\n\n"
                    f"–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –∑–æ–Ω—É: {zone.name}\n"
                    f"–î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {booking_date}.\n"
                    f"–ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n\n"
                    f"–°–ø–∞—Å–∏–±–æ –∑–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!"
                ),
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[serializer.validated_data['email']],
                fail_silently=True,
            )

            return Response(serializer.data, status=201)
        return Response(serializer.errors, status=400)

class RoomBookingListView(ListAPIView):
    queryset = RoomBooking.objects.all().order_by('-created_at')
    serializer_class = RoomBookingSerializer

class ZoneBookingListView(ListAPIView):
    queryset = ZoneBooking.objects.all().order_by('-created_at')
    serializer_class = ZoneBookingSerializer

class BookedDatesView(APIView):
    permission_classes = [AllowAny]

    def get(self, request):
        bookings = RoomBooking.objects.all()
        room_dates = {}

        for booking in bookings:
            room_id = booking.room.id
            current_date = booking.check_in

            while current_date < booking.check_out:
                room_dates.setdefault(room_id, []).append(current_date.strftime('%Y-%m-%d'))
                current_date += timedelta(days=1)

        return Response(room_dates) 
       
class SmartBookingView(APIView):
    permission_classes = [AllowAny]

    def post(self, request):
        data = request.data
        try:
            validate_booking_data(data)
        except ValidationError as e:
            raise DRFValidationError({"detail": str(e)})
        check_in = datetime.strptime(data['check_in'], "%Y-%m-%d").date()
        check_out = datetime.strptime(data['check_out'], "%Y-%m-%d").date()
        adults = int(data.get('adults') or 1)
        children = int(data.get('children') or 0)
        total_guests = adults + children
        room_id = data.get("room")

        booked_ids = RoomBooking.objects.filter(
            check_in__lt=check_out,
            check_out__gt=check_in
        ).values_list('room_id', flat=True)

        # –®–∞–≥ 1: –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–æ–º–Ω–∞—Ç—É –≤—Ä—É—á–Ω—É—é
        if room_id:
            room = Room.objects.filter(id=room_id).first()
            if room and room.id not in booked_ids:
                RoomBooking.objects.create(
                    room=room,
                    name=data['name'],
                    phone=data['phone'],
                    email=data['email'],
                    check_in=check_in,
                    check_out=check_out,
                    adults=adults,
                    children=children,
                    note=data.get('note', '')
                )

                from django.utils.timezone import now

                # –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π
                nights = (check_out - check_in).days
                total_guests = adults + children
                total_price = total_guests * nights * room.price_per_night

                send_mail(
                    subject="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                    message=(
                        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {data['name']}!\n\n"
                        f"–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n\n"
                        f"üìÖ –ó–∞–µ–∑–¥: {check_in.strftime('%Y-%m-%d')}\n"
                        f"üìÖ –í—ã–µ–∑–¥: {check_out.strftime('%Y-%m-%d')}\n"
                        f"‚è∞ –í—Ä–µ–º—è –∑–∞–µ–∑–¥–∞ / –≤—ã–µ–∑–¥–∞: 14:00 / 12:00\n\n"
                        f"üë• –ì–æ—Å—Ç–µ–π: {total_guests} (–≤–∑—Ä–æ—Å–ª—ã—Ö: {adults}, –¥–µ—Ç–µ–π: {children})\n"
                        f"üõè –ö–æ–ª-–≤–æ –Ω–æ—á–µ–π: {nights}\n"
                        f"üè† –ù–æ–º–µ—Ä: {room.name}\n"
                        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –±—Ä–æ–Ω–∏: {total_price:,.0f} KZT\n"
                        f"üí≥ –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: 10,000 KZT\n"
                        f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ –æ–ø–ª–∞—Ç: 0 KZT\n\n"
                        f"üìå –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                        f"–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –≤–Ω–æ—Å–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ —á–µ—Ä–µ–∑ Kaspi –ø–æ –Ω–æ–º–µ—Ä—É:\n"
                        f"+7 777 777 77 77 (–ò–º—è –§.)\n"
                        f"‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ –¥–∞—Ç—É –∑–∞–µ–∑–¥–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.\n\n"
                        f"‚ö†Ô∏è –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–ø–ª–∞—Ç—ã –±—Ä–æ–Ω—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∞.\n"
                        f"–í–æ–∑–≤—Ä–∞—Ç –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –≤–æ–∑–º–æ–∂–µ–Ω –ø—Ä–∏ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ì–ö –†–ö.\n\n"
                        f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
                        f"–ß–µ—Ä–Ω–æ—è—Ä—Å–∫–∞—è –∂–µ–º—á—É–∂–∏–Ω–∞\n"
                        f"üìç –ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å\n"
                        f"üìû +7 777 777 77 77\n"
                        f"üìß info@chernoyarka.kz"
                    ),
                    from_email=settings.DEFAULT_FROM_EMAIL,
                    recipient_list=[data['email']],
                    fail_silently=False
                )


                return Response({"success": f"–ö–æ–º–Ω–∞—Ç–∞ '{room.name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!"})
            else:
                return Response({"error": "–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞"}, status=400)

        # –®–∞–≥ 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥–±–æ—Ä
        available_rooms = Room.objects.exclude(id__in=booked_ids).order_by('capacity')

        room = available_rooms.filter(capacity__gte=total_guests).first()
        if room:
            RoomBooking.objects.create(
                room=room,
                name=data['name'],
                phone=data['phone'],
                email=data['email'],
                check_in=check_in,
                check_out=check_out,
                adults=adults,
                children=children,
                note=data.get('note', '')
            )

            from django.utils.timezone import now

            # –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π
            nights = (check_out - check_in).days
            total_guests = adults + children
            total_price = total_guests * nights * room.price_per_night

            send_mail(
                subject="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                message=(
                    f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {data['name']}!\n\n"
                    f"–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n\n"
                    f"üìÖ –ó–∞–µ–∑–¥: {check_in.strftime('%Y-%m-%d')}\n"
                    f"üìÖ –í—ã–µ–∑–¥: {check_out.strftime('%Y-%m-%d')}\n"
                    f"‚è∞ –í—Ä–µ–º—è –∑–∞–µ–∑–¥–∞ / –≤—ã–µ–∑–¥–∞: 14:00 / 12:00\n\n"
                    f"üë• –ì–æ—Å—Ç–µ–π: {total_guests} (–≤–∑—Ä–æ—Å–ª—ã—Ö: {adults}, –¥–µ—Ç–µ–π: {children})\n"
                    f"üõè –ö–æ–ª-–≤–æ –Ω–æ—á–µ–π: {nights}\n"
                    f"üè† –ù–æ–º–µ—Ä: {room.name}\n"
                    f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –±—Ä–æ–Ω–∏: {total_price:,.0f} KZT\n"
                    f"üí≥ –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: 10,000 KZT\n"
                    f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ –æ–ø–ª–∞—Ç: 0 KZT\n\n"
                    f"üìå –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                    f"–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –≤–Ω–æ—Å–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ —á–µ—Ä–µ–∑ Kaspi –ø–æ –Ω–æ–º–µ—Ä—É:\n"
                    f"+7 777 777 77 77 (–ò–º—è –°.)\n"
                    f"‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ –¥–∞—Ç—É –∑–∞–µ–∑–¥–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.\n\n"
                    f"‚ö†Ô∏è –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–ø–ª–∞—Ç—ã –±—Ä–æ–Ω—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∞.\n"
                    f"–í–æ–∑–≤—Ä–∞—Ç –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –≤–æ–∑–º–æ–∂–µ–Ω –ø—Ä–∏ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ì–ö –†–ö.\n\n"
                    f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
                    f"–ß–µ—Ä–Ω–æ—è—Ä—Å–∫–∞—è –∂–µ–º—á—É–∂–∏–Ω–∞\n"
                    f"üìç –ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å\n"
                    f"üìû +7 777 777 77 77\n"
                    f"üìß info@chernoyarka.kz"
                ),
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[data['email']],
                fail_silently=False
            )


            return Response({"success": f"–ö–æ–º–Ω–∞—Ç–∞ '{room.name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!"})

        # –®–∞–≥ 3: –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã
        for r in range(2, len(available_rooms) + 1):
            for combo in combinations(available_rooms, r):
                if sum(room.capacity for room in combo) >= total_guests:
                    room_names = []
                    for room in combo:
                        RoomBooking.objects.create(
                            room=room,
                            name=data['name'],
                            phone=data['phone'],
                            email=data['email'],
                            check_in=check_in,
                            check_out=check_out,
                            adults=0,
                            children=0,
                            note=f"{data.get('note', '')} (–ê–≤—Ç–æ–Ω–∞–∑–Ω–∞—á–µ–Ω–æ)"
                        )
                        room_names.append(room.name)

                    from django.utils.timezone import now

                    # –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π
                    nights = (check_out - check_in).days
                    total_guests = adults + children
                    total_price = total_guests * nights * room.price_per_night

                    send_mail(
                        subject="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                        message=(
                            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {data['name']}!\n\n"
                            f"–í–∞—à –∑–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n\n"
                            f"üìÖ –ó–∞–µ–∑–¥: {check_in.strftime('%Y-%m-%d')}\n"
                            f"üìÖ –í—ã–µ–∑–¥: {check_out.strftime('%Y-%m-%d')}\n"
                            f"‚è∞ –í—Ä–µ–º—è –∑–∞–µ–∑–¥–∞ / –≤—ã–µ–∑–¥–∞: 14:00 / 12:00\n\n"
                            f"üë• –ì–æ—Å—Ç–µ–π: {total_guests} (–≤–∑—Ä–æ—Å–ª—ã—Ö: {adults}, –¥–µ—Ç–µ–π: {children})\n"
                            f"üõè –ö–æ–ª-–≤–æ –Ω–æ—á–µ–π: {nights}\n"
                            f"üè† –ù–æ–º–µ—Ä: {room.name}\n"
                            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –±—Ä–æ–Ω–∏: {total_price:,.0f} KZT\n"
                            f"üí≥ –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞: 10,000 KZT\n"
                            f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ –æ–ø–ª–∞—Ç: 0 KZT\n\n"
                            f"üìå –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                            f"–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –≤–Ω–æ—Å–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫ —Å –º–æ–º–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ —á–µ—Ä–µ–∑ Kaspi –ø–æ –Ω–æ–º–µ—Ä—É:\n"
                            f"+7 777 777 77 77 (–ò–º—è –§.)\n"
                            f"‚ùó –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ –¥–∞—Ç—É –∑–∞–µ–∑–¥–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.\n\n"
                            f"‚ö†Ô∏è –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–ø–ª–∞—Ç—ã –±—Ä–æ–Ω—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∞.\n"
                            f"–í–æ–∑–≤—Ä–∞—Ç –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã –≤–æ–∑–º–æ–∂–µ–Ω –ø—Ä–∏ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–µ —Å–æ–≥–ª–∞—Å–Ω–æ –ì–ö –†–ö.\n\n"
                            f"–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
                            f"–ß–µ—Ä–Ω–æ—è—Ä—Å–∫–∞—è –∂–µ–º—á—É–∂–∏–Ω–∞\n"
                            f"üìç –ü–∞–≤–ª–æ–¥–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å\n"
                            f"üìû +7 777 777 77 77\n"
                            f"üìß info@chernoyarka.kz"
                        ),
                        from_email=settings.DEFAULT_FROM_EMAIL,
                        recipient_list=[data['email']],
                        fail_silently=False
                    )


                    return Response({"success": f"–ë—Ä–æ–Ω—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –Ω–æ–º–µ—Ä–∞—Ö: {room_names}"})

        return Response({"error": "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –¥–ª—è —Ç–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π"}, status=400)
    
def validate_booking_data(data):
    required_fields = ['name', 'phone', 'email', 'check_in', 'check_out']
    for field in required_fields:
        if not data.get(field):
            raise ValidationError(f"–ü–æ–ª–µ '{field}' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.")

    try:
        validate_email(data['email'])
    except ValidationError:
        raise ValidationError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email.")

    if len(data['phone']) < 6:
        raise ValidationError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
    try:
        check_in = datetime.strptime(data['check_in'], "%Y-%m-%d").date()
        check_out = datetime.strptime(data['check_out'], "%Y-%m-%d").date()
        today = datetime.now().date()

        if check_in < today:
            raise ValidationError("–ù–µ–ª—å–∑—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø—Ä–æ—à–ª—É—é –¥–∞—Ç—É.")

        if check_out <= check_in:
            raise ValidationError("–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–∑–∂–µ –¥–∞—Ç—ã –∑–∞–µ–∑–¥–∞.")
    except ValueError:
        raise ValidationError("–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å YYYY-MM-DD.")
    
    sql_injection_pattern = re.compile(r"(?:')|(?:--)|(;)|(/\*)|(\*/)|(\b(select|insert|delete|drop|update|union|exec|alter)\b)", re.IGNORECASE)
    fields_to_check = ['name', 'email', 'phone', 'note']

    for field in fields_to_check:
        value = data.get(field, '')
        if sql_injection_pattern.search(value):
            raise ValidationError(f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –≤–≤–æ–¥ –≤ –ø–æ–ª–µ '{field}'")